
Allocating common symbols
Common symbol       size              file

SystemCoreClock     0x4               gcc/system_efm32gg.o

Discarded input sections

 .text          0x0000000000000000        0x0 gcc/clock_efm32gg.o
 .data          0x0000000000000000        0x0 gcc/clock_efm32gg.o
 .bss           0x0000000000000000        0x0 gcc/clock_efm32gg.o
 .text.ClockGetConfiguration
                0x0000000000000000      0x1a4 gcc/clock_efm32gg.o
 .text.ClockSetHFClockDivisor
                0x0000000000000000       0x60 gcc/clock_efm32gg.o
 .text.ClockSetPrescalers
                0x0000000000000000       0xb0 gcc/clock_efm32gg.o
 .text.ClockGetPeripheralClockFrequency
                0x0000000000000000       0x18 gcc/clock_efm32gg.o
 .text.ClockGetCoreClockFrequency
                0x0000000000000000       0x18 gcc/clock_efm32gg.o
 .text          0x0000000000000000        0x0 gcc/startup_efm32gg.o
 .data          0x0000000000000000        0x0 gcc/startup_efm32gg.o
 .bss           0x0000000000000000        0x0 gcc/startup_efm32gg.o
 .text.SystemInit
                0x0000000000000000        0xc gcc/startup_efm32gg.o
 .text          0x0000000000000000        0x0 gcc/main.o
 .data          0x0000000000000000        0x0 gcc/main.o
 .bss           0x0000000000000000        0x0 gcc/main.o
 .text          0x0000000000000000        0x0 gcc/led.o
 .data          0x0000000000000000        0x0 gcc/led.o
 .bss           0x0000000000000000        0x0 gcc/led.o
 .rodata.GPIOE  0x0000000000000000        0x4 gcc/led.o
 .text.LED_On   0x0000000000000000       0x24 gcc/led.o
 .text.LED_Write
                0x0000000000000000       0x2c gcc/led.o
 .text          0x0000000000000000        0x0 gcc/system_efm32gg.o
 .data          0x0000000000000000        0x0 gcc/system_efm32gg.o
 .bss           0x0000000000000000        0x0 gcc/system_efm32gg.o
 .text.SystemMaxCoreClockGet
                0x0000000000000000       0x14 gcc/system_efm32gg.o
 .text.SystemHFXOClockGet
                0x0000000000000000       0x14 gcc/system_efm32gg.o
 .text.SystemHFXOClockSet
                0x0000000000000000       0x30 gcc/system_efm32gg.o
 .text.SystemLFRCOClockGet
                0x0000000000000000       0x10 gcc/system_efm32gg.o
 .text.SystemULFRCOClockGet
                0x0000000000000000       0x10 gcc/system_efm32gg.o
 .text.SystemLFXOClockGet
                0x0000000000000000       0x14 gcc/system_efm32gg.o
 .text.SystemLFXOClockSet
                0x0000000000000000       0x30 gcc/system_efm32gg.o
 .text          0x0000000000000000        0x0 gcc/button.o
 .data          0x0000000000000000        0x0 gcc/button.o
 .bss           0x0000000000000000        0x0 gcc/button.o
 .rodata.GPIOB  0x0000000000000000        0x4 gcc/button.o
 .text.Button_Read
                0x0000000000000000       0x2c gcc/button.o
 .text.Button_ReadChanges
                0x0000000000000000       0x3c gcc/button.o
 .text.Button_ReadPressed
                0x0000000000000000       0x3c gcc/button.o

Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x0000000000000000 0x0000000000100000 xr
RAM              0x0000000020000000 0x0000000000020000 xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD gcc/clock_efm32gg.o
LOAD gcc/startup_efm32gg.o
LOAD gcc/main.o
LOAD gcc/led.o
LOAD gcc/system_efm32gg.o
LOAD gcc/button.o
LOAD /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libm.a
LOAD /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a
LOAD /usr/lib/gcc/arm-none-eabi/9.2.1/thumb/v7-m/nofp/libgcc.a
START GROUP
LOAD /usr/lib/gcc/arm-none-eabi/9.2.1/thumb/v7-m/nofp/libgcc.a
LOAD /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libg_nano.a
LOAD /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a
END GROUP
START GROUP
LOAD /usr/lib/gcc/arm-none-eabi/9.2.1/thumb/v7-m/nofp/libgcc.a
LOAD /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a
END GROUP

.text           0x0000000000000000      0x8ac
 *(.vectors)
 .vectors       0x0000000000000000       0xdc gcc/startup_efm32gg.o
                0x0000000000000000                __Vectors
                0x00000000000000dc                __Vectors_End = .
                0x00000000000000dc                __Vectors_Size = (__Vectors_End - __Vectors)
                0x0000000020000018                __end__ = .
 *(.text*)
 .text.SystemCoreClockUpdate
                0x00000000000000dc        0xc gcc/clock_efm32gg.o
 .text.GetProdRev
                0x00000000000000e8       0x18 gcc/clock_efm32gg.o
 .text.nearestpower2exp
                0x0000000000000100       0x6c gcc/clock_efm32gg.o
 .text.SystemCoreClockSet
                0x000000000000016c      0x2f0 gcc/clock_efm32gg.o
                0x000000000000016c                SystemCoreClockSet
 .text.ClockConfigureForFrequency
                0x000000000000045c       0x98 gcc/clock_efm32gg.o
                0x000000000000045c                ClockConfigureForFrequency
 .text.Reset_Handler
                0x00000000000004f4       0x50 gcc/startup_efm32gg.o
                0x00000000000004f4                Reset_Handler
 .text._main    0x0000000000000544        0xc gcc/startup_efm32gg.o
                0x0000000000000544                _main
 .text.Default_Handler
                0x0000000000000550        0x6 gcc/startup_efm32gg.o
                0x0000000000000550                TIMER2_IRQHandler
                0x0000000000000550                DebugMon_Handler
                0x0000000000000550                USART0_TX_IRQHandler
                0x0000000000000550                I2C0_IRQHandler
                0x0000000000000550                HardFault_Handler
                0x0000000000000550                LEUART1_IRQHandler
                0x0000000000000550                SysTick_Handler
                0x0000000000000550                USART1_RX_IRQHandler
                0x0000000000000550                PendSV_Handler
                0x0000000000000550                NMI_Handler
                0x0000000000000550                I2C1_IRQHandler
                0x0000000000000550                TIMER3_IRQHandler
                0x0000000000000550                USART1_TX_IRQHandler
                0x0000000000000550                MSC_IRQHandler
                0x0000000000000550                ADC0_IRQHandler
                0x0000000000000550                UsageFault_Handler
                0x0000000000000550                LEUART0_IRQHandler
                0x0000000000000550                GPIO_EVEN_IRQHandler
                0x0000000000000550                UART0_TX_IRQHandler
                0x0000000000000550                UART1_TX_IRQHandler
                0x0000000000000550                RTC_IRQHandler
                0x0000000000000550                TIMER0_IRQHandler
                0x0000000000000550                LCD_IRQHandler
                0x0000000000000550                PCNT2_IRQHandler
                0x0000000000000550                UART0_RX_IRQHandler
                0x0000000000000550                LETIMER0_IRQHandler
                0x0000000000000550                TIMER1_IRQHandler
                0x0000000000000550                USART2_RX_IRQHandler
                0x0000000000000550                Default_Handler
                0x0000000000000550                EMU_IRQHandler
                0x0000000000000550                PCNT0_IRQHandler
                0x0000000000000550                USB_IRQHandler
                0x0000000000000550                BURTC_IRQHandler
                0x0000000000000550                PCNT1_IRQHandler
                0x0000000000000550                ACMP0_IRQHandler
                0x0000000000000550                USART0_RX_IRQHandler
                0x0000000000000550                MemManage_Handler
                0x0000000000000550                SVC_Handler
                0x0000000000000550                DAC0_IRQHandler
                0x0000000000000550                UART1_RX_IRQHandler
                0x0000000000000550                CMU_IRQHandler
                0x0000000000000550                EBI_IRQHandler
                0x0000000000000550                LESENSE_IRQHandler
                0x0000000000000550                GPIO_ODD_IRQHandler
                0x0000000000000550                AES_IRQHandler
                0x0000000000000550                VCMP_IRQHandler
                0x0000000000000550                DMA_IRQHandler
                0x0000000000000550                BusFault_Handler
                0x0000000000000550                USART2_TX_IRQHandler
 .text.main     0x0000000000000556       0x46 gcc/main.o
                0x0000000000000556                main
 .text.LED_Init
                0x000000000000059c       0x7c gcc/led.o
                0x000000000000059c                LED_Init
 .text.LED_Off  0x0000000000000618       0x24 gcc/led.o
                0x0000000000000618                LED_Off
 .text.LED_Toggle
                0x000000000000063c       0x24 gcc/led.o
                0x000000000000063c                LED_Toggle
 .text.GetProdRev
                0x0000000000000660       0x18 gcc/system_efm32gg.o
 .text.SystemCoreClockGet
                0x0000000000000678       0x34 gcc/system_efm32gg.o
                0x0000000000000678                SystemCoreClockGet
 .text.SystemHFClockGet
                0x00000000000006ac      0x118 gcc/system_efm32gg.o
                0x00000000000006ac                SystemHFClockGet
 .text.SystemInit
                0x00000000000007c4        0xc gcc/system_efm32gg.o
                0x00000000000007c4                SystemInit
 .text.Button_Init
                0x00000000000007d0       0xa0 gcc/button.o
                0x00000000000007d0                Button_Init
 .text.Button_ReadReleased
                0x0000000000000870       0x3c gcc/button.o
                0x0000000000000870                Button_ReadReleased
 *(.init)
 *(.fini)
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend.o *crtend?.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend.o *crtend?.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)
 *(.rodata*)
 *(.eh_frame*)

.glue_7         0x00000000000008ac        0x0
 .glue_7        0x00000000000008ac        0x0 linker stubs

.glue_7t        0x00000000000008ac        0x0
 .glue_7t       0x00000000000008ac        0x0 linker stubs

.vfp11_veneer   0x00000000000008ac        0x0
 .vfp11_veneer  0x00000000000008ac        0x0 linker stubs

.v4_bx          0x00000000000008ac        0x0
 .v4_bx         0x00000000000008ac        0x0 linker stubs

.iplt           0x00000000000008ac        0x0
 .iplt          0x00000000000008ac        0x0 gcc/clock_efm32gg.o

.rel.dyn        0x00000000000008ac        0x0
 .rel.iplt      0x00000000000008ac        0x0 gcc/clock_efm32gg.o

.ARM.extab
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x00000000000008ac                __exidx_start = .

.ARM.exidx
 *(.ARM.exidx* .gnu.linkonce.armexidx.*)
                0x00000000000008ac                __exidx_end = .
                0x00000000000008ac                __etext = .

.data           0x0000000020000000        0x8 load address 0x00000000000008ac
                0x0000000020000000                __data_start__ = .
 *(vtable)
 *(.data*)
 .data.SystemHFXOClock
                0x0000000020000000        0x4 gcc/system_efm32gg.o
 .data.SystemLFXOClock
                0x0000000020000004        0x4 gcc/system_efm32gg.o
                0x0000000020000008                . = ALIGN (0x4)
 *(.ram)
                0x0000000020000008                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)
                0x0000000020000008                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_NAME(.init_array.*))
 *(.init_array)
                [!provide]                        PROVIDE (__init_array_end = .)
                0x0000000020000008                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_NAME(.fini_array.*))
 *(.fini_array)
                [!provide]                        PROVIDE (__fini_array_end = .)
 *(.jcr*)
                0x0000000020000008                . = ALIGN (0x4)
                0x0000000020000008                __data_end__ = .

.igot.plt       0x0000000020000008        0x0 load address 0x00000000000008b4
 .igot.plt      0x0000000020000008        0x0 gcc/clock_efm32gg.o

.bss            0x0000000020000008        0xc load address 0x00000000000008b4
                0x0000000020000008                . = ALIGN (0x4)
                0x0000000020000008                __bss_start__ = .
 *(.bss*)
 .bss.lastread  0x0000000020000008        0x4 gcc/button.o
 .bss.inputpins
                0x000000002000000c        0x4 gcc/button.o
 *(COMMON)
 COMMON         0x0000000020000010        0x4 gcc/system_efm32gg.o
                0x0000000020000010                SystemCoreClock
                0x0000000020000014                . = ALIGN (0x4)
                0x0000000020000014                __bss_end__ = .

.heap           0x0000000020000018      0xc00
                0x0000000020000018                __HeapBase = .
                0x0000000020000018                __end__ = .
                0x0000000020000018                end = __end__
                0x0000000020000018                _end = __end__
 *(.heap*)
 .heap          0x0000000020000018      0xc00 gcc/startup_efm32gg.o
                0x0000000020000c18                __HeapLimit = .

.stack_dummy    0x0000000020000c18      0x400
 *(.stack*)
 .stack         0x0000000020000c18      0x400 gcc/startup_efm32gg.o
                0x0000000020020000                __StackTop = (ORIGIN (RAM) + LENGTH (RAM))
                0x000000002001fc00                __StackLimit = (__StackTop - SIZEOF (.stack_dummy))
                [!provide]                        PROVIDE (__stack = __StackTop)
                0x0000000000000001                ASSERT ((__StackLimit >= __HeapLimit), region RAM overflowed with stack)
                0x0000000000000001                ASSERT ((LENGTH (FLASH) >= (__etext + SIZEOF (.data))), FLASH memory overflowed !)
OUTPUT(gcc/button.axf elf32-littlearm)
LOAD linker stubs

.debug_info     0x0000000000000000     0x1b6b
 .debug_info    0x0000000000000000      0x8c0 gcc/clock_efm32gg.o
 .debug_info    0x00000000000008c0      0x1f9 gcc/startup_efm32gg.o
 .debug_info    0x0000000000000ab9      0x111 gcc/main.o
 .debug_info    0x0000000000000bca      0x52c gcc/led.o
 .debug_info    0x00000000000010f6      0x50a gcc/system_efm32gg.o
 .debug_info    0x0000000000001600      0x56b gcc/button.o

.debug_abbrev   0x0000000000000000      0x7fa
 .debug_abbrev  0x0000000000000000      0x205 gcc/clock_efm32gg.o
 .debug_abbrev  0x0000000000000205       0xfb gcc/startup_efm32gg.o
 .debug_abbrev  0x0000000000000300       0xaf gcc/main.o
 .debug_abbrev  0x00000000000003af      0x153 gcc/led.o
 .debug_abbrev  0x0000000000000502      0x198 gcc/system_efm32gg.o
 .debug_abbrev  0x000000000000069a      0x160 gcc/button.o

.debug_aranges  0x0000000000000000      0x1b0
 .debug_aranges
                0x0000000000000000       0x68 gcc/clock_efm32gg.o
 .debug_aranges
                0x0000000000000068       0x38 gcc/startup_efm32gg.o
 .debug_aranges
                0x00000000000000a0       0x20 gcc/main.o
 .debug_aranges
                0x00000000000000c0       0x40 gcc/led.o
 .debug_aranges
                0x0000000000000100       0x70 gcc/system_efm32gg.o
 .debug_aranges
                0x0000000000000170       0x40 gcc/button.o

.debug_ranges   0x0000000000000000      0x150
 .debug_ranges  0x0000000000000000       0x58 gcc/clock_efm32gg.o
 .debug_ranges  0x0000000000000058       0x28 gcc/startup_efm32gg.o
 .debug_ranges  0x0000000000000080       0x10 gcc/main.o
 .debug_ranges  0x0000000000000090       0x30 gcc/led.o
 .debug_ranges  0x00000000000000c0       0x60 gcc/system_efm32gg.o
 .debug_ranges  0x0000000000000120       0x30 gcc/button.o

.debug_line     0x0000000000000000      0xe02
 .debug_line    0x0000000000000000      0x5a1 gcc/clock_efm32gg.o
 .debug_line    0x00000000000005a1       0xf0 gcc/startup_efm32gg.o
 .debug_line    0x0000000000000691      0x124 gcc/main.o
 .debug_line    0x00000000000007b5      0x1b8 gcc/led.o
 .debug_line    0x000000000000096d      0x2b0 gcc/system_efm32gg.o
 .debug_line    0x0000000000000c1d      0x1e5 gcc/button.o

.debug_str      0x0000000000000000      0x8e5
 .debug_str     0x0000000000000000      0x5a0 gcc/clock_efm32gg.o
                                        0x611 (size before relaxing)
 .debug_str     0x00000000000005a0       0xfc gcc/startup_efm32gg.o
                                        0x285 (size before relaxing)
 .debug_str     0x000000000000069c        0x7 gcc/main.o
                                        0x249 (size before relaxing)
 .debug_str     0x00000000000006a3       0xd6 gcc/led.o
                                        0x38e (size before relaxing)
 .debug_str     0x0000000000000779       0xe0 gcc/system_efm32gg.o
                                        0x452 (size before relaxing)
 .debug_str     0x0000000000000859       0x8c gcc/button.o
                                        0x3dc (size before relaxing)

.comment        0x0000000000000000       0x59
 .comment       0x0000000000000000       0x59 gcc/clock_efm32gg.o
                                         0x5a (size before relaxing)
 .comment       0x0000000000000059       0x5a gcc/startup_efm32gg.o
 .comment       0x0000000000000059       0x5a gcc/main.o
 .comment       0x0000000000000059       0x5a gcc/led.o
 .comment       0x0000000000000059       0x5a gcc/system_efm32gg.o
 .comment       0x0000000000000059       0x5a gcc/button.o

.ARM.attributes
                0x0000000000000000       0x2d
 .ARM.attributes
                0x0000000000000000       0x2d gcc/clock_efm32gg.o
 .ARM.attributes
                0x000000000000002d       0x2d gcc/startup_efm32gg.o
 .ARM.attributes
                0x000000000000005a       0x2d gcc/main.o
 .ARM.attributes
                0x0000000000000087       0x2d gcc/led.o
 .ARM.attributes
                0x00000000000000b4       0x2d gcc/system_efm32gg.o
 .ARM.attributes
                0x00000000000000e1       0x2d gcc/button.o

.debug_frame    0x0000000000000000      0x544
 .debug_frame   0x0000000000000000      0x178 gcc/clock_efm32gg.o
 .debug_frame   0x0000000000000178       0x78 gcc/startup_efm32gg.o
 .debug_frame   0x00000000000001f0       0x30 gcc/main.o
 .debug_frame   0x0000000000000220       0xd4 gcc/led.o
 .debug_frame   0x00000000000002f4      0x180 gcc/system_efm32gg.o
 .debug_frame   0x0000000000000474       0xd0 gcc/button.o
