Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a(lib_a-memset.o)
                              gcc/lcd.o (memset)

Allocating common symbols
Common symbol       size              file

SystemCoreClock     0x4               gcc/system_efm32gg.o

Discarded input sections

 .text          0x0000000000000000        0x0 gcc/clock_efm32gg_ext.o
 .data          0x0000000000000000        0x0 gcc/clock_efm32gg_ext.o
 .bss           0x0000000000000000        0x0 gcc/clock_efm32gg_ext.o
 .text.SystemCoreClockUpdate
                0x0000000000000000        0xc gcc/clock_efm32gg_ext.o
 .text.GetProdRev
                0x0000000000000000       0x18 gcc/clock_efm32gg_ext.o
 .text.nearestpower2exp
                0x0000000000000000       0x6c gcc/clock_efm32gg_ext.o
 .text.SystemCoreClockSet
                0x0000000000000000      0x2f0 gcc/clock_efm32gg_ext.o
 .text.ClockGetConfiguration
                0x0000000000000000      0x1b8 gcc/clock_efm32gg_ext.o
 .text.ClockConfigureForFrequency
                0x0000000000000000       0x98 gcc/clock_efm32gg_ext.o
 .text.ClockSetHFClockDivisor
                0x0000000000000000       0x60 gcc/clock_efm32gg_ext.o
 .text.ClockSetPrescalers
                0x0000000000000000       0xb0 gcc/clock_efm32gg_ext.o
 .text.ClockSetLFCLKA
                0x0000000000000000      0x120 gcc/clock_efm32gg_ext.o
 .text.ClockSetLFCLKB
                0x0000000000000000      0x120 gcc/clock_efm32gg_ext.o
 .text.ClockGetPeripheralClockFrequency
                0x0000000000000000       0x18 gcc/clock_efm32gg_ext.o
 .text.ClockGetCoreClockFrequency
                0x0000000000000000       0x18 gcc/clock_efm32gg_ext.o
 .debug_info    0x0000000000000000      0x964 gcc/clock_efm32gg_ext.o
 .debug_abbrev  0x0000000000000000      0x205 gcc/clock_efm32gg_ext.o
 .debug_aranges
                0x0000000000000000       0x78 gcc/clock_efm32gg_ext.o
 .debug_ranges  0x0000000000000000       0x68 gcc/clock_efm32gg_ext.o
 .debug_line    0x0000000000000000      0x74f gcc/clock_efm32gg_ext.o
 .debug_str     0x0000000000000000      0x646 gcc/clock_efm32gg_ext.o
 .comment       0x0000000000000000       0x5a gcc/clock_efm32gg_ext.o
 .debug_frame   0x0000000000000000      0x1c8 gcc/clock_efm32gg_ext.o
 .ARM.attributes
                0x0000000000000000       0x2d gcc/clock_efm32gg_ext.o
 .text          0x0000000000000000        0x0 gcc/lcd.o
 .data          0x0000000000000000        0x0 gcc/lcd.o
 .bss           0x0000000000000000        0x0 gcc/lcd.o
 .rodata.tablcdspecial
                0x0000000000000000       0x44 gcc/lcd.o
 .text.LCD_WriteString
                0x0000000000000000       0x4e gcc/lcd.o
 .text.LCD_WriteSegmentMask
                0x0000000000000000       0x9c gcc/lcd.o
 .text.LCD_WriteSegment2
                0x0000000000000000       0x48 gcc/lcd.o
 .text.LCD_WriteSegment
                0x0000000000000000       0x3c gcc/lcd.o
 .text.LCD_WriteSpecial
                0x0000000000000000      0x264 gcc/lcd.o
 .text.LCD_Freeze
                0x0000000000000000       0x1c gcc/lcd.o
 .text.LCD_Unfreeze
                0x0000000000000000       0x1c gcc/lcd.o
 .text          0x0000000000000000        0x0 gcc/startup_efm32gg.o
 .data          0x0000000000000000        0x0 gcc/startup_efm32gg.o
 .bss           0x0000000000000000        0x0 gcc/startup_efm32gg.o
 .text.SystemInit
                0x0000000000000000        0xc gcc/startup_efm32gg.o
 .text          0x0000000000000000        0x0 gcc/main.o
 .data          0x0000000000000000        0x0 gcc/main.o
 .bss           0x0000000000000000        0x0 gcc/main.o
 .text.WriteMultiple
                0x0000000000000000       0x34 gcc/main.o
 .text          0x0000000000000000        0x0 gcc/led.o
 .data          0x0000000000000000        0x0 gcc/led.o
 .bss           0x0000000000000000        0x0 gcc/led.o
 .rodata.GPIOE  0x0000000000000000        0x4 gcc/led.o
 .text.LED_Off  0x0000000000000000       0x24 gcc/led.o
 .text          0x0000000000000000        0x0 gcc/system_efm32gg.o
 .data          0x0000000000000000        0x0 gcc/system_efm32gg.o
 .bss           0x0000000000000000        0x0 gcc/system_efm32gg.o
 .text.SystemMaxCoreClockGet
                0x0000000000000000       0x14 gcc/system_efm32gg.o
 .text.SystemHFXOClockGet
                0x0000000000000000       0x14 gcc/system_efm32gg.o
 .text.SystemHFXOClockSet
                0x0000000000000000       0x30 gcc/system_efm32gg.o
 .text.SystemLFRCOClockGet
                0x0000000000000000       0x10 gcc/system_efm32gg.o
 .text.SystemULFRCOClockGet
                0x0000000000000000       0x10 gcc/system_efm32gg.o
 .text.SystemLFXOClockGet
                0x0000000000000000       0x14 gcc/system_efm32gg.o
 .text.SystemLFXOClockSet
                0x0000000000000000       0x30 gcc/system_efm32gg.o
 .data          0x0000000000000000        0x0 /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a(lib_a-memset.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a(lib_a-memset.o)

Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x0000000000000000 0x0000000000100000 xr
RAM              0x0000000020000000 0x0000000000020000 xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD gcc/clock_efm32gg_ext.o
LOAD gcc/lcd.o
LOAD gcc/startup_efm32gg.o
LOAD gcc/main.o
LOAD gcc/led.o
LOAD gcc/system_efm32gg.o
LOAD /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libm.a
LOAD /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a
LOAD /usr/lib/gcc/arm-none-eabi/9.2.1/thumb/v7-m/nofp/libgcc.a
START GROUP
LOAD /usr/lib/gcc/arm-none-eabi/9.2.1/thumb/v7-m/nofp/libgcc.a
LOAD /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libg_nano.a
LOAD /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a
END GROUP
START GROUP
LOAD /usr/lib/gcc/arm-none-eabi/9.2.1/thumb/v7-m/nofp/libgcc.a
LOAD /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a
END GROUP

.text           0x0000000000000000     0x1543
 *(.vectors)
 .vectors       0x0000000000000000       0xdc gcc/startup_efm32gg.o
                0x0000000000000000                __Vectors
                0x00000000000000dc                __Vectors_End = .
                0x00000000000000dc                __Vectors_Size = (__Vectors_End - __Vectors)
                0x0000000020000018                __end__ = .
 *(.text*)
 .text.SetLFAClock
                0x00000000000000dc      0x1c0 gcc/lcd.o
                0x00000000000000dc                SetLFAClock
 .text.LCD_SetClock
                0x000000000000029c       0x64 gcc/lcd.o
                0x000000000000029c                LCD_SetClock
 .text.LCD_Init
                0x0000000000000300       0x1a gcc/lcd.o
                0x0000000000000300                LCD_Init
 *fill*         0x000000000000031a        0x2 
 .text.LCD_Config
                0x000000000000031c      0x12c gcc/lcd.o
                0x000000000000031c                LCD_Config
 .text.LCD_WriteChar
                0x0000000000000448      0x248 gcc/lcd.o
                0x0000000000000448                LCD_WriteChar
 .text.LCD_WriteAlphanumericDisplay
                0x0000000000000690       0x4e gcc/lcd.o
                0x0000000000000690                LCD_WriteAlphanumericDisplay
 .text.LCD_WriteNumericDisplay
                0x00000000000006de       0x4e gcc/lcd.o
                0x00000000000006de                LCD_WriteNumericDisplay
 .text.LCD_ClearAll
                0x000000000000072c       0x60 gcc/lcd.o
                0x000000000000072c                LCD_ClearAll
 .text.LCD_SetAll
                0x000000000000078c       0x64 gcc/lcd.o
                0x000000000000078c                LCD_SetAll
 .text.ln2      0x00000000000007f0       0x32 gcc/lcd.o
 *fill*         0x0000000000000822        0x2 
 .text.LCD_SetVoltage
                0x0000000000000824       0xbc gcc/lcd.o
                0x0000000000000824                LCD_SetVoltage
 .text.LCD_SetContrast
                0x00000000000008e0       0x48 gcc/lcd.o
                0x00000000000008e0                LCD_SetContrast
 .text.Reset_Handler
                0x0000000000000928       0x50 gcc/startup_efm32gg.o
                0x0000000000000928                Reset_Handler
 .text._main    0x0000000000000978        0xc gcc/startup_efm32gg.o
                0x0000000000000978                _main
 .text.Default_Handler
                0x0000000000000984        0x6 gcc/startup_efm32gg.o
                0x0000000000000984                TIMER2_IRQHandler
                0x0000000000000984                DebugMon_Handler
                0x0000000000000984                USART0_TX_IRQHandler
                0x0000000000000984                I2C0_IRQHandler
                0x0000000000000984                HardFault_Handler
                0x0000000000000984                LEUART1_IRQHandler
                0x0000000000000984                SysTick_Handler
                0x0000000000000984                USART1_RX_IRQHandler
                0x0000000000000984                PendSV_Handler
                0x0000000000000984                NMI_Handler
                0x0000000000000984                I2C1_IRQHandler
                0x0000000000000984                TIMER3_IRQHandler
                0x0000000000000984                USART1_TX_IRQHandler
                0x0000000000000984                MSC_IRQHandler
                0x0000000000000984                ADC0_IRQHandler
                0x0000000000000984                UsageFault_Handler
                0x0000000000000984                LEUART0_IRQHandler
                0x0000000000000984                GPIO_EVEN_IRQHandler
                0x0000000000000984                UART0_TX_IRQHandler
                0x0000000000000984                UART1_TX_IRQHandler
                0x0000000000000984                RTC_IRQHandler
                0x0000000000000984                TIMER0_IRQHandler
                0x0000000000000984                LCD_IRQHandler
                0x0000000000000984                PCNT2_IRQHandler
                0x0000000000000984                UART0_RX_IRQHandler
                0x0000000000000984                LETIMER0_IRQHandler
                0x0000000000000984                TIMER1_IRQHandler
                0x0000000000000984                USART2_RX_IRQHandler
                0x0000000000000984                Default_Handler
                0x0000000000000984                EMU_IRQHandler
                0x0000000000000984                PCNT0_IRQHandler
                0x0000000000000984                USB_IRQHandler
                0x0000000000000984                BURTC_IRQHandler
                0x0000000000000984                PCNT1_IRQHandler
                0x0000000000000984                ACMP0_IRQHandler
                0x0000000000000984                USART0_RX_IRQHandler
                0x0000000000000984                MemManage_Handler
                0x0000000000000984                SVC_Handler
                0x0000000000000984                DAC0_IRQHandler
                0x0000000000000984                UART1_RX_IRQHandler
                0x0000000000000984                CMU_IRQHandler
                0x0000000000000984                EBI_IRQHandler
                0x0000000000000984                LESENSE_IRQHandler
                0x0000000000000984                GPIO_ODD_IRQHandler
                0x0000000000000984                AES_IRQHandler
                0x0000000000000984                VCMP_IRQHandler
                0x0000000000000984                DMA_IRQHandler
                0x0000000000000984                BusFault_Handler
                0x0000000000000984                USART2_TX_IRQHandler
 .text.Delay    0x000000000000098a       0x3c gcc/main.o
                0x000000000000098a                Delay
 *fill*         0x00000000000009c6        0x2 
 .text.main     0x00000000000009c8       0x94 gcc/main.o
                0x00000000000009c8                main
 .text.LED_Init
                0x0000000000000a5c       0x7c gcc/led.o
                0x0000000000000a5c                LED_Init
 .text.LED_On   0x0000000000000ad8       0x24 gcc/led.o
                0x0000000000000ad8                LED_On
 .text.LED_Toggle
                0x0000000000000afc       0x24 gcc/led.o
                0x0000000000000afc                LED_Toggle
 .text.LED_Write
                0x0000000000000b20       0x2c gcc/led.o
                0x0000000000000b20                LED_Write
 .text.GetProdRev
                0x0000000000000b4c       0x18 gcc/system_efm32gg.o
 .text.SystemCoreClockGet
                0x0000000000000b64       0x34 gcc/system_efm32gg.o
                0x0000000000000b64                SystemCoreClockGet
 .text.SystemHFClockGet
                0x0000000000000b98      0x118 gcc/system_efm32gg.o
                0x0000000000000b98                SystemHFClockGet
 .text.SystemInit
                0x0000000000000cb0        0xc gcc/system_efm32gg.o
                0x0000000000000cb0                SystemInit
 .text          0x0000000000000cbc       0xa0 /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a(lib_a-memset.o)
                0x0000000000000cbc                memset
 *(.init)
 *(.fini)
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend.o *crtend?.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend.o *crtend?.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)
 *(.rodata*)
 .rodata.segments14forchar
                0x0000000000000d5c       0xc0 gcc/lcd.o
 .rodata.segments7forchar
                0x0000000000000e1c       0x60 gcc/lcd.o
 .rodata.tablcd
                0x0000000000000e7c      0x1c2 gcc/lcd.o
 *fill*         0x000000000000103e        0x2 
 .rodata.seg_encoding
                0x0000000000001040       0xa0 gcc/lcd.o
 .rodata.com_encoding
                0x00000000000010e0        0x8 gcc/lcd.o
 .rodata.tablcdclear
                0x00000000000010e8      0x3c0 gcc/lcd.o
 .rodata.segdatalow
                0x00000000000014a8       0x20 gcc/lcd.o
                0x00000000000014a8                segdatalow
 .rodata.segdatahigh
                0x00000000000014c8       0x20 gcc/lcd.o
                0x00000000000014c8                segdatahigh
 .rodata        0x00000000000014e8       0x5b gcc/main.o
 *(.eh_frame*)

.glue_7         0x0000000000001544        0x0
 .glue_7        0x0000000000001544        0x0 linker stubs

.glue_7t        0x0000000000001544        0x0
 .glue_7t       0x0000000000001544        0x0 linker stubs

.vfp11_veneer   0x0000000000001544        0x0
 .vfp11_veneer  0x0000000000001544        0x0 linker stubs

.v4_bx          0x0000000000001544        0x0
 .v4_bx         0x0000000000001544        0x0 linker stubs

.iplt           0x0000000000001544        0x0
 .iplt          0x0000000000001544        0x0 gcc/lcd.o

.rel.dyn        0x0000000000001544        0x0
 .rel.iplt      0x0000000000001544        0x0 gcc/lcd.o

.ARM.extab
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x0000000000001543                __exidx_start = .

.ARM.exidx
 *(.ARM.exidx* .gnu.linkonce.armexidx.*)
                0x0000000000001543                __exidx_end = .
                0x0000000000001543                __etext = .

.data           0x0000000020000000       0x10 load address 0x0000000000001543
                0x0000000020000000                __data_start__ = .
 *(vtable)
 *(.data*)
 .data.string.5487
                0x0000000020000000        0x4 gcc/main.o
 .data.numstring.5488
                0x0000000020000004        0x4 gcc/main.o
 .data.SystemHFXOClock
                0x0000000020000008        0x4 gcc/system_efm32gg.o
 .data.SystemLFXOClock
                0x000000002000000c        0x4 gcc/system_efm32gg.o
                0x0000000020000010                . = ALIGN (0x4)
 *(.ram)
                0x0000000020000010                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)
                0x0000000020000010                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_NAME(.init_array.*))
 *(.init_array)
                [!provide]                        PROVIDE (__init_array_end = .)
                0x0000000020000010                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_NAME(.fini_array.*))
 *(.fini_array)
                [!provide]                        PROVIDE (__fini_array_end = .)
 *(.jcr*)
                0x0000000020000010                . = ALIGN (0x4)
                0x0000000020000010                __data_end__ = .

.igot.plt       0x0000000020000010        0x0 load address 0x0000000000001554
 .igot.plt      0x0000000020000010        0x0 gcc/lcd.o

.bss            0x0000000020000010        0x8 load address 0x0000000000001554
                0x0000000020000010                . = ALIGN (0x4)
                0x0000000020000010                __bss_start__ = .
 *(.bss*)
 .bss.lcdclock_set
                0x0000000020000010        0x1 gcc/lcd.o
 *(COMMON)
 *fill*         0x0000000020000011        0x3 
 COMMON         0x0000000020000014        0x4 gcc/system_efm32gg.o
                0x0000000020000014                SystemCoreClock
                0x0000000020000018                . = ALIGN (0x4)
                0x0000000020000018                __bss_end__ = .

.heap           0x0000000020000018      0xc00
                0x0000000020000018                __HeapBase = .
                0x0000000020000018                __end__ = .
                0x0000000020000018                end = __end__
                0x0000000020000018                _end = __end__
 *(.heap*)
 .heap          0x0000000020000018      0xc00 gcc/startup_efm32gg.o
                0x0000000020000c18                __HeapLimit = .

.stack_dummy    0x0000000020000c18      0x400
 *(.stack*)
 .stack         0x0000000020000c18      0x400 gcc/startup_efm32gg.o
                0x0000000020020000                __StackTop = (ORIGIN (RAM) + LENGTH (RAM))
                0x000000002001fc00                __StackLimit = (__StackTop - SIZEOF (.stack_dummy))
                [!provide]                        PROVIDE (__stack = __StackTop)
                0x0000000000000001                ASSERT ((__StackLimit >= __HeapLimit), region RAM overflowed with stack)
                0x0000000000000001                ASSERT ((LENGTH (FLASH) >= (__etext + SIZEOF (.data))), FLASH memory overflowed !)
OUTPUT(gcc/lcd.axf elf32-littlearm)
LOAD linker stubs

.debug_info     0x0000000000000000     0x2afd
 .debug_info    0x0000000000000000      0xe22 gcc/lcd.o
 .debug_info    0x0000000000000e22      0x1f9 gcc/startup_efm32gg.o
 .debug_info    0x000000000000101b      0x18b gcc/main.o
 .debug_info    0x00000000000011a6      0x52c gcc/led.o
 .debug_info    0x00000000000016d2      0x50a gcc/system_efm32gg.o
 .debug_info    0x0000000000001bdc      0xf21 /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a(lib_a-memset.o)

.debug_abbrev   0x0000000000000000      0x8c9
 .debug_abbrev  0x0000000000000000      0x203 gcc/lcd.o
 .debug_abbrev  0x0000000000000203       0xfb gcc/startup_efm32gg.o
 .debug_abbrev  0x00000000000002fe      0x107 gcc/main.o
 .debug_abbrev  0x0000000000000405      0x153 gcc/led.o
 .debug_abbrev  0x0000000000000558      0x198 gcc/system_efm32gg.o
 .debug_abbrev  0x00000000000006f0      0x1d9 /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a(lib_a-memset.o)

.debug_aranges  0x0000000000000000      0x1e8
 .debug_aranges
                0x0000000000000000       0xb0 gcc/lcd.o
 .debug_aranges
                0x00000000000000b0       0x38 gcc/startup_efm32gg.o
 .debug_aranges
                0x00000000000000e8       0x30 gcc/main.o
 .debug_aranges
                0x0000000000000118       0x40 gcc/led.o
 .debug_aranges
                0x0000000000000158       0x70 gcc/system_efm32gg.o
 .debug_aranges
                0x00000000000001c8       0x20 /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a(lib_a-memset.o)

.debug_ranges   0x0000000000000000      0x178
 .debug_ranges  0x0000000000000000       0xa0 gcc/lcd.o
 .debug_ranges  0x00000000000000a0       0x28 gcc/startup_efm32gg.o
 .debug_ranges  0x00000000000000c8       0x20 gcc/main.o
 .debug_ranges  0x00000000000000e8       0x30 gcc/led.o
 .debug_ranges  0x0000000000000118       0x60 gcc/system_efm32gg.o

.debug_line     0x0000000000000000     0x1253
 .debug_line    0x0000000000000000      0x8ee gcc/lcd.o
 .debug_line    0x00000000000008ee       0xf0 gcc/startup_efm32gg.o
 .debug_line    0x00000000000009de      0x1a2 gcc/main.o
 .debug_line    0x0000000000000b80      0x1b8 gcc/led.o
 .debug_line    0x0000000000000d38      0x2b0 gcc/system_efm32gg.o
 .debug_line    0x0000000000000fe8      0x26b /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a(lib_a-memset.o)

.debug_str      0x0000000000000000     0x1227
 .debug_str     0x0000000000000000      0x717 gcc/lcd.o
                                        0x76c (size before relaxing)
 .debug_str     0x0000000000000717       0xfc gcc/startup_efm32gg.o
                                        0x284 (size before relaxing)
 .debug_str     0x0000000000000813       0x33 gcc/main.o
                                        0x1f1 (size before relaxing)
 .debug_str     0x0000000000000846       0xd6 gcc/led.o
                                        0x38d (size before relaxing)
 .debug_str     0x000000000000091c      0x173 gcc/system_efm32gg.o
                                        0x451 (size before relaxing)
 .debug_str     0x0000000000000a8f      0x798 /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a(lib_a-memset.o)
                                        0x907 (size before relaxing)

.comment        0x0000000000000000       0xa7
 .comment       0x0000000000000000       0x59 gcc/lcd.o
                                         0x5a (size before relaxing)
 .comment       0x0000000000000059       0x5a gcc/startup_efm32gg.o
 .comment       0x0000000000000059       0x5a gcc/main.o
 .comment       0x0000000000000059       0x5a gcc/led.o
 .comment       0x0000000000000059       0x5a gcc/system_efm32gg.o
 .comment       0x0000000000000059       0x4e /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a(lib_a-memset.o)
                                         0x4f (size before relaxing)

.ARM.attributes
                0x0000000000000000       0x2d
 .ARM.attributes
                0x0000000000000000       0x2d gcc/lcd.o
 .ARM.attributes
                0x000000000000002d       0x2d gcc/startup_efm32gg.o
 .ARM.attributes
                0x000000000000005a       0x2d gcc/main.o
 .ARM.attributes
                0x0000000000000087       0x2d gcc/led.o
 .ARM.attributes
                0x00000000000000b4       0x2d gcc/system_efm32gg.o
 .ARM.attributes
                0x00000000000000e1       0x2d /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a(lib_a-memset.o)

.debug_frame    0x0000000000000000      0x658
 .debug_frame   0x0000000000000000      0x2d8 gcc/lcd.o
 .debug_frame   0x00000000000002d8       0x78 gcc/startup_efm32gg.o
 .debug_frame   0x0000000000000350       0x7c gcc/main.o
 .debug_frame   0x00000000000003cc       0xd4 gcc/led.o
 .debug_frame   0x00000000000004a0      0x180 gcc/system_efm32gg.o
 .debug_frame   0x0000000000000620       0x38 /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a(lib_a-memset.o)

.debug_loc      0x0000000000000000      0x231
 .debug_loc     0x0000000000000000      0x231 /usr/lib/gcc/arm-none-eabi/9.2.1/../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a(lib_a-memset.o)
